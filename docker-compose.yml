version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: todo-postgres
    environment:
      POSTGRES_DB: todo_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./demo-be/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./demo-be
      dockerfile: Dockerfile
    container_name: todo-backend
    environment:
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: todo_db
      DB_USER: postgres
      DB_PASSWORD: postgres
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./demo-be:/app
      - /app/node_modules
    command: npm run dev

  # Frontend (for development)
  frontend:
    build:
      context: ./demo-fe
      dockerfile: Dockerfile
    container_name: todo-frontend
    environment:
      VITE_API_URL: http://localhost:3000/api
    ports:
      - "5173:5173"
    depends_on:
      - backend
    volumes:
      - ./demo-fe:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres-data:
